type Query {
    users: [User!]!
    user(id:ID!): User,
    latestUsers: [User!]
}

type User {
    id: ID!,
    name: String!,
    email: String!,
    password: String!,
}

type Mutation {
    addUser(id: ID, name: String!, email:String!, password: String!): User,
    editUser(id:ID!, name:String, email:String, password:String): User,
    deleteUser(id:ID!): Boolean!
}

# Un fragment GraphQL permet de regrouper un ensemble de sous-champs appartenant à un type Object
# Il va peremttre de récupérer ces sous-champs rapidement et facilement (par exemple, lorsque l'on execute des comparaisons entre plusieurs données).
